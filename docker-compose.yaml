version: '3.8'

services:
  # PostgreSQL база данных
  db:
    image: postgres:15-alpine
    container_name: lms_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME:-lms_db}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis для Celery и кэша
  redis:
    image: redis:7-alpine
    container_name: lms_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Django приложение
  web:
    build: .
    container_name: lms_backend
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/media
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker
  celery:
    build: .
    container_name: lms_celery
    command: celery -A myproject worker --loglevel=info --pool=prefork --concurrency=4
    env_file:
      - .env
    environment:
      DB_HOST: db
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/media
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped

  # Celery beat
  celery_beat:
    build: .
    container_name: lms_celery_beat
    command: celery -A myproject beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - .env
    environment:
      DB_HOST: db
      REDIS_URL: redis://redis:6379/0
    volumes:
      - static_volume:/home/app/staticfiles
      - media_volume:/home/app/media
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped

  # Nginx
  nginx:
    image: nginx:1.24-alpine
    container_name: lms_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/home/app/staticfiles:ro
      - media_volume:/home/app/media:ro
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: