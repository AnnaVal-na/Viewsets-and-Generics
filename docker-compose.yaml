services:
  # PostgreSQL база данных
  db:
    image: postgres:13
    container_name: lms_db
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis для Celery
  redis:
    image: redis:7-alpine
    container_name: lms_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Django приложение
  web:
    build: .
    container_name: lms_backend
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery worker
  celery:
    build: .
    container_name: lms_celery
    command: celery -A myproject worker --loglevel=info --pool=solo
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - web
    restart: unless-stopped

  # Celery beat
  celery_beat:
    build: .
    container_name: lms_celery_beat
    command: celery -A myproject beat --loglevel=info
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_PORT: 5432
      REDIS_HOST: redis
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - web
      - celery
    restart: unless-stopped

volumes:
  postgres_data:
