name: CI/CD Pipeline

on:
  push:
    branches: [ CI-CD-Final-Deployment_1 ]
  pull_request:
    branches: [ CI-CD-Final-Deployment_1 ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install and configure PostgreSQL
        run: |
          # Устанавливаем PostgreSQL
          sudo apt-get update
          sudo apt-get install -y postgresql postgresql-contrib
          
          # Запускаем PostgreSQL
          sudo service postgresql start
          
          # Ждем пока PostgreSQL полностью запустится
          echo "Waiting for PostgreSQL to start..."
          for i in {1..10}; do
            if sudo service postgresql status | grep -q "online"; then
              echo "PostgreSQL is running!"
              break
            fi
            echo "Attempt $i/10: PostgreSQL starting..."
            sleep 3
          done
          
          # Создаем пользователя и базу данных
          sudo -u postgres psql -c "CREATE USER test_user WITH PASSWORD 'test_password';"
          sudo -u postgres psql -c "CREATE DATABASE test_db WITH OWNER test_user;"
          sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE test_db TO test_user;"
          
          # Проверяем подключение
          PGPASSWORD='test_password' pg_isready -h localhost -p 5432 -U test_user -d test_db
          echo "PostgreSQL is ready for connections!"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run all tests
        env:
          DB_NAME: test_db
          DB_USER: test_user
          DB_PASSWORD: test_password
          DB_HOST: localhost
          DB_PORT: 5432
          SECRET_KEY: test_secret_key_123
          DEBUG: False
        run: |
          python manage.py test --noinput --settings=test_settings

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/myapp
          git fetch --all
          git reset --hard origin/${{ github.ref_name }}
          source venv/bin/activate
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx